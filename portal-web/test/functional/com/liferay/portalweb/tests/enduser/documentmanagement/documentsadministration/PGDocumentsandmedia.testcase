@component-name = "portal-document-management"
definition {

	property custom.properties = "default.layout.template.id=1_column";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Documents Management";

	var pageName = "Documents and Media Page";
	var portletName = "Documents and Media";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.enableActionsMenuOnPortlet();

		LexiconEntry.changeDisplayStyle(displayStyle = "list");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			DMDocumentType.tearDownCP();

			Page.tearDownCP();
		}
	}

	@priority = "5"
	test AddDocuments {
		property testray.component.names = "Training";

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.doc",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.docx",
			dmDocumentTitle = "Document_1.docx");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.docx",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpeg",
			dmDocumentTitle = "Document_1.jpeg");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFileType = "Image",
			dmDocumentTitle = "Document_1.jpeg",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFileType = "Image",
			dmDocumentTitle = "Document_1.jpg",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Generated_by_adobe.jpg",
			dmDocumentTitle = "Generated_by_adobe.jpg");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFileType = "Image",
			dmDocumentTitle = "Generated_by_adobe.jpg",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_2.mp3",
			dmDocumentTitle = "Document_2.mp3");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_2.mp3",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.odt",
			dmDocumentTitle = "Document_1.odt");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.odt",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.pdf",
			dmDocumentTitle = "Document_1.pdf");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.pdf",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.png",
			dmDocumentTitle = "Document_1.png");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFileType = "Image",
			dmDocumentTitle = "Document_1.png",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.xls",
			dmDocumentTitle = "Document_1.xls");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.xls",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.xlsx",
			dmDocumentTitle = "Document_1.xlsx");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.xlsx",
			dmDocumentType = "Basic Document");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mov",
			dmDocumentTitle = "Document_1.mov");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.mov",
			dmDocumentType = "Basic Document");
	}

	@priority = "4"
	test AddFolderDocumentDuplicate {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMDocument.addPG(
			dmDocument = "Duplicate",
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");
	}

	@priority = "5"
	test AddFolderDocuments {
		property testray.component.names = "Training";

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc");

		DMDocument.addPG(
			dmDocumentFile = "Document_2.doc",
			dmDocumentTitle = "Document_2.doc");

		DMDocument.addPG(
			dmDocumentFile = "Document_3.doc",
			dmDocumentTitle = "Document_3.doc");

		DMDocument.viewPG(dmDocumentTitle = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewPG(dmDocumentTitle = "Document_2.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewPG(dmDocumentTitle = "Document_3.doc");
	}

	@priority = "4"
	test AddFolderImage {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Image Title");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "DM Image Title");
	}

	@priority = "4"
	test AddFolderImageDuplicate {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Image Title");

		DMDocument.addPG(
			dmDocument = "Duplicate",
			dmDocumentDescription = "DM Image Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Image Title");
	}

	@priority = "4"
	test AddFolderImages {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description 1",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Image 1 Title");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description 2",
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "DM Image 2 Title");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description 3",
			dmDocumentFile = "Document_3.jpg",
			dmDocumentTitle = "DM Image 3 Title");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Image Description 1",
			dmDocumentTitle = "DM Image 1 Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Image Description 2",
			dmDocumentTitle = "DM Image 2 Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Image Description 3",
			dmDocumentTitle = "DM Image 3 Title");
	}

	@priority = "4"
	test AddFolderNameSymbol {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolder = "Invalid",
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name?");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMPortlet.viewDefaultPG();
	}

	@priority = "4"
	test AddSubFolderImageAndDocument {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM SubFolder Description",
			dmFolderName = "DM SubFolder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Image Title");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "DM Image Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title");
	}

	@priority = "4"
	test AddSubFolderNameDocumentNameDuplicate {
		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolder = "Duplicate",
			dmFolderDescription = "DM Document Description",
			dmFolderName = "DM Document Title");
	}

	@priority = "4"
	test AddSubFolders {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "Folder Name");

		DMFolder.viewPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "Folder Name");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM Subfolder1 Description",
			dmFolderName = "Subfolder1 Name");

		DMNavigator.gotoFolder(dmFolderName = "Subfolder1 Name");

		DMFolder.viewPG(dmFolderName = "Subfolder1 Name");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM Subfolder2 Description",
			dmFolderName = "Subfolder2 Name");

		DMNavigator.gotoFolder(dmFolderName = "Subfolder2 Name");

		DMFolder.viewPG(dmFolderName = "Subfolder2 Name");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM Subfolder3 Description",
			dmFolderName = "Subfolder3 Name");

		DMNavigator.gotoFolder(dmFolderName = "Subfolder3 Name");

		DMFolder.viewPG(dmFolderName = "Subfolder3 Name");
	}

	@description = "This test ensures that a document with forbidden characters in the title can be published successfully."
	@priority = "5"
	test AllowTitleWithForbiddenCharacters {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = '''/\<>:"?|*''');

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = '''/\<>:"?|*''',
			escapedDocumentTitle = '''/\&lt;&gt;:&#34;?|*''',
			titleWithForbiddenCharacters = "true");
	}

	@priority = "4"
	test CancelCheckout {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.checkoutPG(dmDocumentTitle = "DM Document Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.cancelCheckoutPG(dmDocumentTitle = "DM Document Title");
	}

	@description = "This test covers LPS-94508. It ensures that a tag can be created when selecting an item from autocomplete."
	@priority = "5"
	test CreateTagUsingAutocomplete {
		DMDocument.addMultiplePG(dmDocumentFileList = "Document_1.doc,Document_2.docx");

		for (var tagName : list "tagone,tagtwo,tagthree") {
			var key_dmDocumentTitle = "Document_1";

			Check(locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_CHECKBOX");

			Click(locator1 = "Icon#EDIT_TAGS");

			DMDocument.editTags(tagName = "${tagName}");

			DMNavigator.gotoDocumentPG(dmDocumentTitle = "Document_1");

			DMDocument.viewTag(tagName = "${tagName}");

			Navigator.gotoPage(pageName = "Documents and Media Page");
		}

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		var key_dmDocumentTitle = "Document_2";

		Check(locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_CHECKBOX");

		Click(locator1 = "Icon#EDIT_TAGS");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "Modal#HEADER",
			value1 = "Edit Tags");

		AssertTextEquals.assertPartialText(
			locator1 = "Modal#BODY",
			value1 = "You're editing the tags for the selected item.");

		Click(locator1 = "Modal#BODY");

		Type.sendKeys(
			locator1 = "DocumentsAndMedia#EDIT_TAGS_FIELD",
			value1 = "ta");

		AssertClick(
			key_tagName = "tagtwo",
			locator1 = "AssetCategorization#TAG_AUTOCOMPLETE_SPECIFIC",
			value1 = "tagtwo");

		Button.clickSave();

		SelectFrame(value1 = "relative=top");

		Alert.viewSuccessMessageText(successMessage = "Changes saved.");

		DMNavigator.gotoDocumentPG(dmDocumentTitle = "Document_2");

		DMDocument.viewTag(tagName = "tagtwo");
	}

	@priority = "5"
	test DeleteDocumentInFolder {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.deletePG(dmDocumentTitle = "DM Document Title");
	}

	@priority = "4"
	test DeleteDocumentType {
		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "DM Document Type Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocumentType.viewMenulistOption(dmDocumentTypeName = "DM Document Type Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.deletePG(dmDocumentTypeName = "DM Document Type Name");
	}

	@priority = "4"
	test DeleteDocumentWithSlashesInTitle {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "/D/M/Document Title");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "/D/M/Document Title");

		Navigator.openURL();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.deletePG(dmDocumentTitle = "/D/M/Document Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Recycle Bin",
			portlet = "Recycle Bin");

		RecycleBin.emptyCP();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewDefaultCP();
	}

	@priority = "5"
	test DeleteFolderWithDocument {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description 1",
			dmDocumentTitle = "DM Document Title 1",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.openURL();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.deletePG(dmFolderName = "DM Folder Name");
	}

	@priority = "5"
	test DeleteSubFolder {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM Subfolder Description",
			dmFolderName = "DM Subfolder Name");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		Refresh();

		DMFolder.deletePG(dmFolderName = "DM Subfolder Name");
	}

	@priority = "4"
	test DeleteSubFolderImageActions {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM SubFolder Description",
			dmFolderName = "DM SubFolder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Image Title");

		DMDocument.deleteViaActionsPG(dmDocumentTitle = "DM Image Title");
	}

	@priority = "5"
	test DownloadDocumentWithSlashesInTitleViaDocumentView {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "/D/M/Document Title");

		DMDocument.downloadPG(dmDocumentTitle = "/D/M/Document Title");
	}

	@priority = "5"
	test EditAndDeleteGoogleDoc {
		property portal.release = "false";
		property test.name.skip.portal.instance = "PGDocumentsandmedia#EditAndDeleteGoogleDoc";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		PortalSettings.gotoConfiguration(
			configurationCategory = "Documents and Media",
			configurationName = "Google Drive",
			configurationScope = "Virtual Instance Scope");

		var googleClientID = PropsUtil.get("google.client.id.4");
		var googleClientSecret = PropsUtil.get("google.client.secret.4");
		var googlePickerAPIKey = PropsUtil.get("google.api.key.4");

		PortalSettings.configureGoogleDrive(
			googleClientID = "${googleClientID}",
			googleClientSecret = "${googleClientSecret}",
			googlePickerAPIKey = "${googlePickerAPIKey}");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.clickPortletPlusIconPG(portletName = "Documents and Media");

		MenuItem.click(menuItem = "Google Drive Shortcut");

		GoogleDrive.gotoDrive(
			userEmailAddress = PropsUtil.get("email.address.4"),
			userPassword = PropsUtil.get("email.password.4"),
			windowTitle = "New Google Drive Shortcut - ${siteName}");

		GoogleDrive.selectDocument(
			googleDocName = "liferay.txt",
			googleDocTitle = "liferay");

		PortletEntry.publish();

		DMDocument.viewPG(dmDocumentTitle = "liferay");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.deletePG(dmDocumentTitle = "liferay");
	}

	@priority = "5"
	test EditDocument {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			useCurrentTitle = "true");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.editCmdPG(
			checkFileNameText = "true",
			checkTitleText = "true",
			dmDocumentDescriptionEdit = "DM Document Description Edit",
			dmDocumentFileNameEdit = "DM Document File Name Edit.doc",
			dmDocumentTitle = "Document_1",
			dmDocumentTitleEdit = "DM Document Title Edit");

		PortletEntry.publish();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description Edit",
			dmDocumentFileName = "DM Document File Name Edit.doc",
			dmDocumentTitle = "DM Document Title Edit",
			dmDocumentVersionNumber = "1.1");
	}

	@priority = "5"
	test EditDocumentType {
		property testray.component.names = "Training";

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "DM Document Type Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocumentType.viewMenulistOption(dmDocumentTypeName = "DM Document Type Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentType();

		DMDocumentType.edit(
			dmDocumentTypeDescriptionEdit = "DM Document Type Description Edit",
			dmDocumentTypeName = "DM Document Type Name",
			dmDocumentTypeNameEdit = "DM Document Type Name Edit");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMDocumentType.viewMenulistOption(dmDocumentTypeName = "DM Document Type Name Edit");
	}

	@priority = "5"
	test EditFolderDocument {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.editPG(
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title Edit",
			dmDocumentVersionNumber = "1.1");
	}

	@description = "This test edits a document inside a folder. It also asserts a major version increment since the change involved changing the actual file."
	@priority = "4"
	test EditFolderDocumentFile {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.editPG(
			dmDocumentFileEdit = "Document_2.doc",
			dmDocumentTitle = "DM Document Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentVersionNumber = "2.0");
	}

	@priority = "5"
	test EditSubFolder {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM SubFolder Description",
			dmFolderName = "DM SubFolder Name");

		DMFolder.editPG(
			dmFolderDescriptionEdit = "DM SubFolder Description Edit",
			dmFolderName = "DM SubFolder Name",
			dmFolderNameEdit = "DM SubFolder Name Edit");
	}

	@priority = "4"
	test EditSubFolderImage {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM SubFolder Description",
			dmFolderName = "DM SubFolder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "DM Image Title");

		DMDocument.editPG(
			dmDocumentTitle = "DM Image Title",
			dmDocumentTitleEdit = "DM Image Title Edit");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "DM Image Title Edit",
			dmDocumentVersionNumber = "1.1");
	}

	@priority = "4"
	test MoveDocumentWithSlashesInTitle {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "/D/M/Document Title");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMDocument.moveToFolderPG(
			dmDocumentTitle = "/D/M/Document Title",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "/D/M/Document Title");
	}

	@priority = "4"
	test MoveFolderDocumentDuplicateToFolder {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder1 Description",
			dmFolderName = "DM Folder1 Name");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder2 Description",
			dmFolderName = "DM Folder2 Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder1 Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder2 Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder1 Name");

		DMDocument.moveToFolderPG(
			dmDocumentTitle = "DM Document Title",
			dmDuplicateDocument = "true",
			dmFolderName = "DM Folder2 Name");
	}

	@description = "This case covers the folder name of a document can be viewed in the info panel and navigate to it."
	@priority = "4"
	test MoveFolderDocumentToFolder {
		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder1 Description",
			dmFolderName = "DM Folder1 Name",
			groupName = "Guest");

		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder2 Description",
			dmFolderName = "DM Folder2 Name",
			groupName = "Guest");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder1 Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder1 Name");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "DM Folder1 Name",
			locationFieldName = "true");

		DMDocument.moveToFolderPG(
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "DM Folder2 Name");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder2 Name");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "DM Folder2 Name",
			locationFieldName = "true");
	}

	@priority = "5"
	test MoveGoogleDocToFolder {
		property portal.release = "false";
		property test.name.skip.portal.instance = "PGDocumentsandmedia#MoveGoogleDocToFolder";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		PortalSettings.gotoConfiguration(
			configurationCategory = "Documents and Media",
			configurationName = "Google Drive",
			configurationScope = "Virtual Instance Scope");

		var googleClientID = PropsUtil.get("google.client.id.4");
		var googleClientSecret = PropsUtil.get("google.client.secret.4");
		var googlePickerAPIKey = PropsUtil.get("google.api.key.4");

		PortalSettings.configureGoogleDrive(
			googleClientID = "${googleClientID}",
			googleClientSecret = "${googleClientSecret}",
			googlePickerAPIKey = "${googlePickerAPIKey}");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.clickPortletPlusIconPG(portletName = "Documents and Media");

		MenuItem.click(menuItem = "Google Drive Shortcut");

		GoogleDrive.gotoDrive(
			userEmailAddress = PropsUtil.get("email.address.4"),
			userPassword = PropsUtil.get("email.password.4"),
			windowTitle = "New Google Drive Shortcut - ${siteName}");

		GoogleDrive.selectDocument(
			googleDocName = "liferay.txt",
			googleDocTitle = "liferay");

		PortletEntry.publish();

		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.moveToFolderPG(
			dmDocumentTitle = "liferay",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewPG(dmDocumentTitle = "liferay");
	}

	@priority = "5"
	test RemovePortlet {
		property portal.acceptance = "true";

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Portlet.deletePG(portletName = "Documents and Media");
	}

	@priority = "4"
	test RevertVersionFolderDocumentFile {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.editPG(
			dmDocumentFileEdit = "Document_2.doc",
			dmDocumentTitle = "DM Document Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentVersionNumber = "2.0");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title");

		DMDocument.revertPG(
			dmDocumentTitle = "DM Document Title",
			dmDocumentVersionNumber = "1.0");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentVersionNumber = "3.0");
	}

	@priority = "4"
	test SearchContentDocument {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		SearchPortlets.searchEmbedded(searchTerm = "This is a *.doc file.");

		SearchResultPortlet.viewSearchResults(
			searchAssetSummary = "This is a *.doc file.",
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");
	}

	@priority = "4"
	test SearchDocument {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		SearchPortlets.searchEmbedded(searchTerm = "DM Document Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");
	}

	@priority = "4"
	test SearchFolderDocument {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		SearchPortlets.searchEmbedded(searchTerm = "DM Document Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");
	}

	@priority = "4"
	test SearchFolderImage {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Image Description",
			dmDocumentTitle = "DM Image Title",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_1.jpg");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		SearchPortlets.searchEmbedded(searchTerm = "DM Image Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Image Title",
			searchAssetType = "Document");
	}

	@priority = "4"
	test SearchSubFolderDocument {
		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM SubFolder Description",
			dmFolderName = "DM SubFolder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		SearchPortlets.searchEmbedded(searchTerm = "DM Document Title");

		SearchResultPortlet.viewSearchResults(
			searchAssetTitle = "DM Document Title",
			searchAssetType = "Document");
	}

	@description = "This is a use case for LPS-51280"
	@priority = "5"
	test SubscribeToCommentAndViewEmailNotification {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property test.smtp.server.enabled = "true";

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentPermissionsCP(dmDocumentTitle = "DM Folder Name");

		PermissionsInline.addOrRemoveAccessPermissionFromAllRoles(
			addOrRemoveViewPermission = "Add",
			roleList = "guest");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewPG(dmDocumentTitle = "DM Document Title");

		Comments.subscribePG();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "test test");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocumentComment.addPG(
			commentBody = "DM Document Comment Body",
			dmDocumentTitle = "DM Document Title");

		MockMock.viewMail(
			asset = "New Comments by Test Test",
			content = "DM Document Comment Body",
			recipient = "userfn userln",
			sender = "Joe Bloggs",
			subject = "New Comments by Test Test");
	}

	@priority = "5"
	test SubscribeToFolderAndViewEmailNotifications {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property test.smtp.server.enabled = "true";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editUserSiteCP(
			siteName = "${siteName}",
			userScreenName = "usersn");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentPermissionsCP(dmDocumentTitle = "DM Folder Name");

		PermissionsInline.addOrRemoveAccessPermissionFromAllRoles(
			addOrRemoveViewPermission = "Add",
			roleList = "guest");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.subscribePG();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		Click(locator1 = "Icon#INFO");

		AssertTextEquals(
			locator1 = "Link#UNSUBSCRIBE",
			value1 = "Unsubscribe");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		MockMock.viewMail(
			asset = "New Basic Document: ${dmDocumentTitle}",
			content = "A Basic Document with the title ${dmDocumentTitle} has been added to folder ${dmFolderName}.",
			dmDocumentTitle = "DM Document Title",
			dmFolderName = "DM Folder Name",
			recipient = "userfn userln",
			sender = "Joe Bloggs",
			subject = "New Basic Document: ${dmDocumentTitle}");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.editPG(
			dmDocumentTitle = "DM Document Title",
			dmDocumentTitleEdit = "DM Document Title Edit");

		MockMock.viewMail(
			asset = "Basic Document Updated for ${dmDocumentTitle}",
			content = "A Basic Document with the title ${dmDocumentTitle} has been updated in folder ${dmFolderName}.",
			dmDocumentTitle = "DM Document Title Edit",
			dmFolderName = "DM Folder Name",
			recipient = "userfn userln",
			sender = "Joe Bloggs",
			subject = "Basic Document Updated for ${dmDocumentTitle}");
	}

	@priority = "4"
	test UnlockDocumentInFolder {
		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Guest");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			folderName = "DM Folder Name",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.checkoutPG(dmDocumentTitle = "DM Document Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewCheckedoutPG(
			dmDocumentTitle = "DM Document Title",
			status = "Draft");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.checkinPG(dmDocumentTitle = "DM Document Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewAllPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentVersionNumber = "2.0");
	}

	@description = "This test covers LPS-91595. It ensures that the document selection persists when navigating through the pagination in the DM widget."
	@priority = "4"
	test ViewDocumentPagination {
		for (var documentName : list "Document_2.doc,Document_1.xls,Document_4.jpg,Document_3.jpg,Document_2.xls,Document_1.txt,Document_4.txt,Document_3.xls,Document_2.jpg,Document_1.doc") {
			var extension = StringUtil.extractLast("${documentName}", ".");

			if ("${extension}" == "doc") {
				var mimeType = "application/msword";
			}
			else if ("${extension}" == "jpg") {
				var mimeType = "image/jpg";
			}
			else if ("${extension}" == "xls") {
				var mimeType = "application/vnd.ms-excel";
			}
			else if ("${extension}" == "txt") {
				var mimeType = "text/plain";
			}

			JSONDocument.addFileWithUploadedFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "${documentName}",
				groupName = "Guest",
				mimeType = "${mimeType}",
				sourceFileName = "${documentName}");
		}

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Pagination.changePagination(itemsPerPage = "4");

		Pagination.viewResults(results = "Showing 1 to 4 of 10 entries.");

		DMDocument.checkDocumentCheckboxPG(dmDocumentTitle = "Document_2.jpg");

		AssertTextEquals(
			locator1 = "ManagementBar#NAVBAR_TEXT",
			value1 = "1 of 10 Selected");

		Click(locator1 = "Pagination#NEXT_LINK");

		DMDocument.checkDocumentCheckboxPG(dmDocumentTitle = "Document_4.jpg");

		AssertTextEquals(
			locator1 = "ManagementBar#NAVBAR_TEXT",
			value1 = "2 of 10 Selected");
	}

	@description = "This ensures that the user can create a document with the topic from the Global site."
	@priority = "4"
	test ViewDocumentWithTopic {
		JSONCategory.addCategory(
			groupName = "Global",
			title = "Apple",
			vocabularyName = "Topic");

		JSONCategory.addCategory(
			groupName = "Global",
			title = "Dragon Fruit",
			vocabularyName = "Topic");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.addPG(
			categoryName = "Apple",
			dmDocumentDescription = "Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "Document_1.doc",
			vocabularyName = "Topic");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Click(
			key_dmDocumentTitle = "Document_1.doc",
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Panel.expandPanel(panel = "Categorization");

		AssetCategorization.addCategory(
			categoryName = "Dragon Fruit",
			vocabularyName = "Topic");

		Button.clickPublish();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Click(
			key_dmDocumentTitle = "Document_1.doc",
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		DMDocument.viewCategories(categoryNameList = "Apple,Dragon Fruit");
	}

	@description = "This ensures that a user can view the information about an image when navigating to info panel."
	@priority = "4"
	test ViewImageInfoPanel {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentExtension = "jpg",
			dmDocumentFileTypeInfo = "Image",
			dmDocumentTitle = "DM Document Title",
			dmDocumentType = "Basic Document");
	}

	@priority = "4"
	test ViewOlderVersion {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.editPG(
			dmDocumentDescriptionEdit = "DM Document Description Edited",
			dmDocumentTitle = "DM Document Title");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description Edited",
			dmDocumentTitle = "DM Document Title");

		DMDocument.viewOlderVersionPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "DM Document Title",
			dmDocumentVersionNumber = "1.0");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMDocument.viewPG(
			dmDocumentDescription = "DM Document Description Edited",
			dmDocumentTitle = "DM Document Title");

		DMDocument.viewDocumentVersionNumberCmdPG(dmDocumentVersionNumber = "1.1");
	}

	@description = "This ensures that the user can view the document through related assets."
	@priority = "3"
	test ViewRelatedDocument {
		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_1.doc",
			groupName = "Guest",
			mimeType = "application/msword",
			sourceFileName = "Document_1.doc");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Guest",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		Navigator.gotoPage(pageName = "Documents and Media Page");

		Click(
			key_dmDocumentTitle = "Document_2.jpg",
			locator1 = "DocumentsAndMedia#DESCRIPTIVE_LIST_DOCUMENT_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		RelatedAssets.selectAsset(
			assetTitle = "Document_1.doc",
			assetType = "Basic Document");

		Button.clickPublish();

		Navigator.gotoPage(pageName = "Documents and Media Page");

		DMNavigator.gotoRelatedAssetPG(
			assetTitle = "Document_2.jpg",
			dmDocumentTitle = "Document_1.doc");

		AssertVisible(
			key_dmDocumentFileName = "Document_2.jpg",
			locator1 = "DocumentsAndMediaDocument#DOCUMENT_DETAILS_IMAGE_PREVIEW");
	}

	@priority = "5"
	test ViewSearchResultsForChildObjectRespectsParentFolderPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property test.name.skip.portal.instance = "PGDocumentsandmedia#ViewSearchResultsForChildObjectRespectsParentFolderPermissions";
		property testray.component.names = "Training";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		Pause(locator1 = "3000");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(userGroupName = "UG UserGroup Name");

		JSONGroup.addGroup(groupName = "Site Name 1");

		SitePages.openPagesAdmin(siteURLKey = "Site Name 1");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Site.assignUserGroupAsMemberCP(userGroupName = "UG UserGroup Name");

		SitePages.openPagesAdmin(siteURLKey = "Site Name 1");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Teams");

		Team.addCP(
			teamDescription = "Site Team Description",
			teamName = "Site Team Name");

		SitePages.openPagesAdmin(siteURLKey = "Site Name 1");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Teams");

		Team.assignUserGroups(
			teamName = "Site Team Name",
			userGroupName = "UG UserGroup Name");

		SitePages.openPagesAdmin(siteURLKey = "Site Name 1");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Navigator.gotoNavItem(navItem = "User Groups");

		Site.assignSiteRoleToUserGroup(
			roleName = "Site Administrator",
			userGroupName = "UG UserGroup Name");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "usersn");

		JSONGroup.addGroup(groupName = "Site Name 2");

		JSONLayout.addPublicLayout(
			groupName = "Site Name 2",
			layoutName = "Documents and Media Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name 2",
			layoutName = "Documents and Media Page",
			widgetName = "Documents and Media");

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name 2");

		LexiconEntry.changeDisplayStyle(displayStyle = "list");

		DMFolder.addPG(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMFolder.addPG(
			dmFolderDescription = "DM SubFolder Description",
			dmFolderName = "DM SubFolder Name");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoDocumentPermissionsCP(dmDocumentTitle = "DM Folder Name");

		PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
			addOrRemoveViewPermission = "Remove",
			roleList = "Guest");

		IFrame.closeFrame();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMNavigator.gotoDocumentPermissionsCP(dmDocumentTitle = "DM SubFolder Name");

		PermissionsInline.viewPermissionsChecked(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest");

		IFrame.closeFrame();

		Navigator.gotoSitePage(
			pageName = "Documents and Media Page",
			siteName = "Site Name 2");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMDocument.addPG(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Documents and Media");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMNavigator.gotoFolder(dmFolderName = "DM SubFolder Name");

		DMNavigator.gotoDocumentPermissionsCP(dmDocumentTitle = "DM Document Title");

		PermissionsInline.viewPermissionsChecked(
			permissionDefinitionKey = "CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX",
			roleTitle = "Guest");

		IFrame.closeFrame();

		Pause(locator1 = "3000");

		SitePages.openPagesAdmin(siteURLKey = "Site Name 1");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(
			pageName = "Search Page",
			pageTemplateName = "Search");

		Navigator.gotoSitePage(
			pageName = "Search Page",
			siteName = "Site Name 1");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.gotoSitePage(
			pageName = "Search Page",
			siteName = "Site Name 1");

		SearchPortlets.searchWidget(searchTerm = "DM Document Title");

		SearchResultPortlet.viewNoSearchResults(searchTerm = "DM Document Title");
	}

}