@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test ChangeFieldGroupPositionOnForm {
		property portal.acceptance = "false";

		// TODO LPS-98077 ChangeFieldGroupPositionOnForm pending implementation

	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "3"
	test CheckIfFieldGroupDataPersists {
		property portal.acceptance = "false";

		// TODO LPS-98077 CheckIfFieldGroupDataPersists pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "3"
	test CheckWebContentUponDeletingFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 CheckWebContentUponDeletingFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test CreateFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 CreateFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test DeleteAFieldFromAFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 DeleteAFieldFromAFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DeleteFieldGroupOnStructure {
		property portal.acceptance = "false";

		var structureName = "WC Structure Name";

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text");

		Click(locator1 = "DataEngineBuilder#FORM_FIELDS_GROUP");

		Click(locator1 = "Icon#VERTICAL_ELLIPSIS_BUTTON");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertElementNotPresent(locator1 = "DataEngineBuilder#DUPLICATED_FORM_FIELDS_GROUP_LABEL");

		WebContentStructures.saveCP(structureName = "${structureName}");
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DeleteNestedFieldGroupOnStructure {
		property portal.acceptance = "false";

		// TODO LPS-98077 DeleteNestedFieldGroupOnStructure pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DuplicateAFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 DuplicateAFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@priority = "5"
	test DuplicateANestedFieldGroup {
		property portal.acceptance = "false";

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Date",
			fieldName = "Date",
			targetFieldLabel = "Numeric");

		Click(locator1 = "DataEngineBuilder#FORM_FIELDS_GROUP");

		Click(locator1 = "DataEngineBuilder#FORM_FIELDS_GROUP_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Duplicate");

		AssertTextEquals(
			locator1 = "DataEngineBuilder#DUPLICATED_FORM_FIELDS_GROUP_LABEL",
			value1 = "Copy of Fields Group");

		WebContentStructures.saveCP(structureName = "WC Structure Name");
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "5"
	test DuplicateFieldGroupOnStructure {
		property portal.acceptance = "false";

		// TODO LPS-98077 DuplicateFieldGroupOnStructure pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test EditFieldGroupLabel {
		property portal.acceptance = "false";

		// TODO LPS-98077 EditFieldGroupLabel pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@priority = "3"
	test EditFieldOnDuplicatedFieldGroup {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Numeric",
			fieldName = "Numeric",
			targetFieldLabel = "Text");

		DataEngine.addFieldNested(
			fieldFieldLabel = "Date",
			fieldName = "Date",
			targetFieldLabel = "Numeric");

		DataEngine.duplicate(fieldsGroupLabel = "Fields Group");

		for (var fieldName : list "Text,Numeric,Date") {
			DataEngine.editFieldLabel(
				fieldFieldLabel = "Copy of ${fieldName}",
				fieldFieldLabelEdit = "Duplicated ${fieldName}");
		}

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Name");

		for (var fieldName : list "Text,Numeric,Date") {
			DataEngine.viewField(
				fieldFieldLabel = "Duplicated ${fieldName}",
				fieldName = "${fieldName}");
		}
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test EmptyAFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 EmptyAFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "3"
	test NestAFieldGroupOnAnotherFieldGroup {
		property portal.acceptance = "false";

		// TODO LPS-98077 NestAFieldGroupOnAnotherFieldGroup pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test SetFieldGroupAsCollapsibleAndExecuteOnAWebContent {
		property portal.acceptance = "false";

		// TODO LPS-98077 SetFieldGroupAsCollapsibleAndExecuteOnAWebContent pending implementation
	}

	@description = "This is a test for LPS-98077. As a Developer, I want to the ability to nest fields"
	@ignore = "true"
	@priority = "4"
	test SetFieldGroupAsRepeatableAndExecuteOnAWebContent {
		property portal.acceptance = "false";

		// TODO LPS-98077 SetFieldGroupAsRepeatableAndExecuteOnAWebContent pending implementation
	}

}